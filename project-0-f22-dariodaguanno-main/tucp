//
// Created by Dario Daguanno on 8/31/2022.
//
//The program will create an exact copy of a file on a disk

//at least 2 arguments
//if there's two files: copy first file to second file
//     if second file don't exist: create second file then copy first file to it
//

#include <stdio.h>
#include <stdlib.h>
#include <dirent.h>
#include <errno.h>
#include <string.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <unistd.h>
#include <fcntl.h>
#include <limits.h>

void dirCpy(const char *filePath, const char *dirPath);
void fileCpy(const char *filePath, const char *fileDest);

int main(int argc/*argument count*/, char**argv/*array of the whole argument*/){
    struct stat fileStat;

    if(argc<3){
        printf("tucp: too little arguments\n");
        exit(1);
    }
    else if(argc == 3){
        char *destPath = argv[2];
        stat(destPath, &fileStat);

        if(S_ISDIR(fileStat.st_mode)){
            stat(argv[1], &fileStat);
            if(S_ISDIR(fileStat.st_mode)){
                printf("Cannot copy a directory to another directory\n");
                exit(1);
            }
            dirCpy(argv[1],argv[2]);
            printf("Finished copying %s to directory %s\n", argv[1], argv[2]);
        }
        else{
            fileCpy(argv[1], argv[2]);
            printf("Finished copying %s to %s\n", argv[1], argv[2]);
        }
    }
    else{
        char *destPath = argv[argc-1];
        stat(destPath, &fileStat);

        if(S_ISDIR(fileStat.st_mode)){
            //CONTINUE HERE
            for(int i = 1; i < (argc-1); i++){
                stat(argv[i], &fileStat);
                if(S_ISDIR(fileStat.st_mode)){
                    printf("Cannot copy a directory to another directory\n");
                    exit(1);
                }
                dirCpy(argv[i], destPath);
                printf("Finished copying %s to directory %s\n", argv[i], destPath);
            }

        }
        else{
            printf("Last argument must be a directory\n");
            exit(1);
        }
    }
    return 0;
}

void dirCpy(const char *filePath, const char *dirPath){
    int i;

    char dirPathcpy[PATH_MAX];
    strcpy(dirPathcpy, dirPath);
    strcat(dirPathcpy, "/");
    strcat(dirPathcpy, filePath);

    FILE *source = fopen(filePath, "r");
    if(source == NULL){
        printf("tucp: no source file found\n");
        exit(1);
    }

    FILE *dest = fopen(dirPathcpy, "w");

    while((i = fgetc(source)) != EOF){
        fputc(i, dest);
    }

    fclose(source);
    fclose(dest);
}

void fileCpy(const char *filePath, const char *fileDest){
    int i;
    FILE *source = fopen(filePath, "r");
    if(source == NULL){
        printf("tucp: no source file found\n");
        exit(1);
    }
    FILE *dest = fopen(fileDest, "w");

    while((i = fgetc(source)) != EOF){
        fputc(i, dest);
    }
    fclose(source);
    fclose(dest);
}

